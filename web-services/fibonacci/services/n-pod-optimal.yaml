apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: fibonacci-n-pod-optimal
  namespace: default
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/metric: "concurrency"
        autoscaling.knative.dev/target: "500"

        # autoscaling.knative.dev/min-scale: "0"
        # autoscaling.knative.dev/max-scale: "12"

        autoscaling.knative.dev/min-scale: "1"
        autoscaling.knative.dev/max-scale: "1"

        autoscaling.knative.dev/window: "60s"

        # Make all requests are handled by the activator (always active)
        autoscaling.knative.dev/target-burst-capacity: "-1"

        # If current concurrency is 10% of target, scale up (accommodate containerCreating)
        autoscaling.knative.dev/target-utilization-percentage: "10"

        # Make panic window x % of stable window
        autoscaling.knative.dev/panic-window-percentage: "1.0"


        # # Make 3 pods when scaling from zero
        # autoscaling.knative.dev/activation-scale: "4"
        autoscaling.knative.dev/activation-scale: "1"
    spec:
      containers:
        - image: dev.local/fibonacci:1.0.0
          resources:
            requests:
              cpu: 200m
              memory: 512M
            limits:
              cpu: 300m
              memory: 512M
